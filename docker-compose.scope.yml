version: '3.8'

services:
  lightrag-scope:
    build:
      context: .
      dockerfile: Dockerfile.scope
    container_name: lightrag-scope
    ports:
      - "8020:8020"
    environment:
      # Core LightRAG settings
      - WORKING_DIR=/app/data
      - LOG_DIR=/app/logs
      - LOG_LEVEL=INFO

      # Scope system settings
      - SCOPE_ENABLE_INHERITANCE=true
      - SCOPE_VALIDATION_STRICT=true
      - SCOPE_MIGRATION_BATCH_SIZE=1000
      - SCOPE_CACHE_SIZE=10000
      - SCOPE_CACHE_TTL=3600
      - SCOPE_DEFAULT_WORKSPACE=abc12345abcd12345abc1234567890ab

      # API settings
      - API_HOST=0.0.0.0
      - API_PORT=8020
      - API_WORKERS=2

      # Database settings (optional - for PostgreSQL storage)
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=lightrag
      - POSTGRES_USER=lightrag
      - POSTGRES_PASSWORD=lightrag_password

      # Redis settings (optional - for Redis storage)
      - REDIS_URI=redis://redis:6379/0

    volumes:
      - lightrag_data:/app/data
      - lightrag_logs:/app/logs
      - ./config:/app/config
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8020/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:14-alpine
    container_name: lightrag-postgres
    environment:
      - POSTGRES_DB=lightrag
      - POSTGRES_USER=lightrag
      - POSTGRES_PASSWORD=lightrag_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lightrag"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: lightrag-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: lightrag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - lightrag-scope
    restart: unless-stopped

volumes:
  lightrag_data:
    driver: local
  lightrag_logs:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    name: lightrag-scope-network